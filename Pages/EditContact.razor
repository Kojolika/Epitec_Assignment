@page "/edit/{id:guid}"
@using Epitec_Assignment.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ContactContext> CContextFactory
@inject NavigationManager Nav

<h3>Edit Contact</h3>

@if(contact == null)
{
    <p>Loading...</p>
}
else
{
   <div class="row">
    <EditForm Model="contact" OnValidSubmit="UpdateContact">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label>First Name: </label>
            <InputText @bind-Value="contact.FirstName" />
            <ValidationMessage For="@(() => contact.FirstName)"/>
        </div>

        <div class="form-group">
            <label>Last Name: </label>
            <InputText @bind-Value="contact.LastName" />
            <ValidationMessage For="@(() => contact.LastName)"/>
        </div>

        <div class="form-group">
            <label>Phone Number: </label>
            <InputText @bind-Value="contact.PhoneNumber" />
            <ValidationMessage For="@(() => contact.PhoneNumber)"/>
        </div>

         <div class="form-group">
            <label>Birth Date: </label>
            <InputDate @bind-Value="contact.BirthDate" />
            <ValidationMessage For="@(() => contact.BirthDate)"/>
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Update Contact"/>
            <button class="btn btn-danger" @onclick ="(() => Back())">Cancel</button>
        </div>
    </EditForm>
</div> 
}

@code {
    private Contact? contact;

    [Parameter] public Guid id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using(var ctx = CContextFactory.CreateDbContext())
        {
            contact = await ctx.Contacts.FirstOrDefaultAsync(c => c.Id == id);
        }
    }
    
    private async Task UpdateContact()
    {
        using(var ctx = CContextFactory.CreateDbContext())
        {
            ctx.Contacts.Update(contact);
            await ctx.SaveChangesAsync();
            Nav.NavigateTo("/");
        }
    }

    private void Back(){
        Nav.NavigateTo("/");
    }
}